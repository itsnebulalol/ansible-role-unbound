{{ ansible_managed | comment }}

{%- macro render_dict(dictionary) -%}
{%- for key, value in dictionary.items() | list -%}
    {%- set key = key|replace("_", "-") -%}

        {#- Fix: error for cert file: certificate.pem #}
        {#- error in SSL_CTX use_certificate_file crypto error:02001002:system library:fopen:No such file or directory #}
        {%- if key == 'ssl-service-key' or key == 'ssl-service-pem' %}

    {{key}}: {{unbound.server.directory}}/{{value}}
        {%- elif value|string == "1" or value|string == "0" %}

    {{key}}: {{value}}
        {%- elif value == True %}

    {{key}}: yes
        {%- elif value == False %}

    {{key}}: no
        {%- elif value == none or value|string == "" %}

    {{key}}: ""

        {%- elif value is iterable and value is not string %}
        {%- for item in value %}
        {%- if item != none and item|string != "" %}

    {{key}}: {{item}}
        {%- endif -%}
        {%- endfor -%}
        {%- else %}

    {{key}}: {{value}}
        {%- endif %}
    {%- endfor %}
{%- endmacro %}

# See unbound.conf(5) man page.
# https://www.unbound.net/documentation/unbound.conf.html
#
# Use this to include other text into the file.
# include: "otherfile.conf"
{% if unbound is defined -%}
{%- for unbound_clause, clause_values in unbound.items() | list -%}
{%- set unbound_clause = unbound_clause|replace("_", "-") %}

{{unbound_clause}}:

    {%- if unbound_optimise is defined and unbound_optimise and unbound_clause == 'server' %}
    {%- set threads = ansible_processor_cores|default(1)|int(1) * ansible_processor_count|default(1)|int(1) %}

    # http://unbound.nlnetlabs.nl/documentation/howto_optimise.html
    # https://unbound.net/pipermail/unbound-users/2010-March/001083.html
    # https://github.com/jedisct1/dnscrypt-server-docker/blob/master/unbound.sh
    {#- divide by user percentage and divide by number of caches and * 0.75 for malloc overhead and for kernal and other services #}
    {%- set memoryMB = ansible_memtotal_mb|default(512.0)|float(512.0) * unbound_optimise_memory|default(50)|float(50.0) / 100.0 / 4.0 * 0.75 %}
    {%- set memory = memoryMB|round|int(48) %}

    {# use all CPUs -#}
    num-threads: {{ threads }}
    {# power of 2 close to num-threads (e.g. 1, 2, 4, 8, 16) -#}
    msg-cache-slabs: {{ threads }}
    rrset-cache-slabs: {{ threads }}
    key-cache-slabs: {{ threads }}
    infra-cache-slabs: {{ threads }}
    # dnscrypt-shared-secret-cache-slabs: {{ threads }}
    # dnscrypt-nonce-cache-slabs:{{ threads }}

    msg-cache-size: {{ memory }}m # default 4m
    rrset-cache-size: {{ memory * 2 }}m # rrset=msg*2 # default 4m
    key-cache-size: {{ memory }}m # default 4m
    neg-cache-size: {{ memory // 2 }}m # default 1m
    infra-cache-numhosts: 50000
    # dnscrypt-shared-secret-cache-size: {{ memory // 4 }}m # default 4m
    # dnscrypt-nonce-cache-size: {{ memory // 4 }}m # default 4m

    ## if--with-libevent
    # outgoing-range: {{ 8192 / threads }}
    # num-queries-per-thread: {{ 8192 / threads // 2}}
    ## else
    # outgoing-range: {{ 1024 / threads - 50 }}
    # num-queries-per-thread: {{ (1024 / threads - 50) // 2}}

    ## Larger socket buffer.  OS may need config.
    # so-rcvbuf: 4m
    # so-sndbuf: 4m
    ## Faster UDP with multithreading (only on Linux).
    # so-reuseport: yes

    {% endif -%}

    {%- if opennic_tlds is defined and unbound_clause == 'server' %}

    domain-insecure: "dns.opennic.glue"
    {%- for tld in opennic_tlds if tld != '.' %}

    domain-insecure: "{{tld}}"
    {%- endfor %}

    domain-insecure: "glue"
    domain-insecure: "baza"
    domain-insecure: "coin"
    domain-insecure: "emc"
    domain-insecure: "lib"
    domain-insecure: "ku"
    domain-insecure: "te"
    domain-insecure: "ti"
    domain-insecure: "uu"
    {% endif -%}

    {%- if clause_values.items is defined -%}
    {{ render_dict(clause_values) }}
    {%- else %}
    {%- for stuff in clause_values -%}
    {%- if not loop.first %}

{{unbound_clause}}:
    {%- endif -%}
    {{ render_dict(stuff) }}
    {%- endfor -%}
    {%- endif -%}

{%- endfor -%}
{%- endif %}

{% if opennic_tlds is defined and opennic_address is defined %}
stub-zone:
    name: "dns.opennic.glue"
    stub-addr: "{{opennic_address}}"   #  Authorative Slave DNS server
{% for tld in opennic_tlds if tld != '.' %}
stub-zone:
    name: "{{tld}}"
    stub-addr: "{{opennic_address}}"
{% endfor -%}
# OpenNIC Peers:
stub-zone:
    name: "baza"
    stub-host: "seed1.emercoin.com"
    stub-host: "seed2.emercoin.com"
stub-zone:
    name: "coin"
    stub-host: "seed1.emercoin.com"
    stub-host: "seed2.emercoin.com"
stub-zone:
    name: "emc"
    stub-host: "seed1.emercoin.com"
    stub-host: "seed2.emercoin.com"
stub-zone:
    name: "lib"
    stub-host: "seed1.emercoin.com"
    stub-host: "seed2.emercoin.com"
stub-zone:
    name: "ku"
    stub-addr: "{{opennic_address}}"
    stub-addr: "5.45.96.220"    # ns1.new-nations.ku
    stub-addr: "185.82.22.133"  # ns2.new-nations.ku
stub-zone:
    name: "te"
    stub-addr: "{{opennic_address}}"
    stub-addr: "5.45.96.220"    # ns1.new-nations.te
    stub-addr: "185.82.22.133"  # ns2.new-nations.te
stub-zone:
    name: "ti"
    stub-addr: "{{opennic_address}}"
    stub-addr: "5.45.96.220"    # ns1.new-nations.ti
    stub-addr: "185.82.22.133"  # ns2.new-nations.ti
stub-zone:
    name: "uu"
    stub-addr: "{{opennic_address}}"
    stub-addr: "5.45.96.220"    # ns1.new-nations.uu
    stub-addr: "185.82.22.133"  # ns2.new-nations.uu
{% endif %}
