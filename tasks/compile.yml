---
- name: Install python-apt - Ubuntu Trusty
  package:
    name: python-apt
    state: present
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'

- name: Add ppa:chris-lea/libsodium to apt repository - Ubuntu Trusty
  apt_repository:
    repo: 'ppa:chris-lea/libsodium'
    codename: 'trusty'
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'

- name: Install unbound dependencies
  package:
    name: "{{item}}"
    state: present
  with_items: "{{_unbound.dependencies}}"

- name: Get ports index - FreeBSD
  command: portsnap auto
  args:
    creates: /usr/ports
  when: ansible_os_family == 'FreeBSD'

- name: Install unbound from port - FreeBSD
  portinstall:
    name: unbound
    state: present
  when: ansible_os_family == 'FreeBSD'

- name: Create /usr/local/src directory if it doesn't exist
  file:
    path: /usr/local/src/
    state: directory
  when: ansible_os_family != 'FreeBSD'

- name: Create unbound directory if it doesn't exist
  file:
    path: "{{unbound.server.directory}}"
    state: directory
  when: ansible_os_family != 'FreeBSD'

- name: Get unbound source
  get_url:
    url: "https://unbound.nlnetlabs.nl/downloads/unbound-{{unbound_compile_version}}.tar.gz"
    dest: /usr/local/src/unbound-{{unbound_compile_version}}.tar.gz
    checksum: "sha256:{{ unbound_compile_sha256 }}"
  when: ansible_os_family != 'FreeBSD'

# - name: Extract source 'tar -xzf'
#   unarchive:
#     src: "/usr/local/src/unbound-{{unbound_compile_version}}.tar.gz"
#     dest: /usr/local/src/
#     creates: /usr/local/src/unbound-{{unbound_compile_version}}
#   when: ansible_os_family != 'FreeBSD' and not ansible_check_mode

# fix: "Could not find or access '/usr/local/src/unbound-1.6.7.tar.gz'"
# https://github.com/ansible/ansible/issues/30821
- name: Extract source 'tar -xzf'
  command: "tar -xzf /usr/local/src/unbound-{{unbound_compile_version}}.tar.gz"
  args:
    chdir: /usr/local/src/
    creates: /usr/local/src/unbound-{{unbound_compile_version}}
  when: ansible_os_family != 'FreeBSD' and not ansible_check_mode

# Fix: Unable to start service unbound-> (code=exited, status=226/NAMESPACE)
- name: Update contrib/unbound.service
  template:
    src: unbound.service.in
    dest: /usr/local/src/unbound-{{unbound_compile_version}}/contrib/unbound.service.in
  when: ansible_service_mgr == 'systemd' and not ansible_check_mode

- name: ./configure unbound
  command: "./configure {{unbound_compile_config}}"
  args:
    chdir: "/usr/local/src/unbound-{{unbound_compile_version}}"
    creates: Makefile
  when: ansible_os_family != 'FreeBSD' and not ansible_check_mode

- name: Make unbound
  make:
    chdir: "/usr/local/src/unbound-{{unbound_compile_version}}"
    params:
      NUM_THREADS: "{{ansible_processor_cores|default(1) * ansible_processor_count|default(1)}}"
  when: ansible_os_family != 'FreeBSD' and not ansible_check_mode

- name: Make install unbound
  make:
    chdir: "/usr/local/src/unbound-{{unbound_compile_version}}"
    target: install
  become: yes
  register: result
  changed_when: false
  when: ansible_os_family != 'FreeBSD' and not ansible_check_mode

# Fix: error while loading shared libraries: libunbound.so.2: cannot open shared object file: No such file or directory
- name: Tell system about new shared libraries - Debian
  command: ldconfig
  changed_when: false
  when: ansible_os_family == 'Debian'

- name: Create unbound group
  group:
    name: "{{unbound.server.username|default(unbound)}}"
  when: ansible_os_family != 'FreeBSD'

- name: Create unbound user
  user:
    name: "{{unbound.server.username|default(unbound)}}"
    group: "{{unbound.server.username|default(unbound)}}"
    shell: /dev/null
    createhome: no
  when: ansible_os_family != 'FreeBSD'

- name: Copy contrib/unbound.init
  template:
    src: unbound.init
    dest: /etc/init.d/unbound
    mode: 0751
  when: (ansible_service_mgr == 'service' or ansible_service_mgr == 'upstart') and ansible_os_family == 'Debian' and not ansible_check_mode

- name: Copy contrib/unbound.service - systemd
  copy:
    remote_src: true
    src: /usr/local/src/unbound-{{unbound_compile_version}}/contrib/unbound.service
    dest: /etc/systemd/system/unbound.service
  when: ansible_service_mgr == 'systemd' and not ansible_check_mode

- name: Copy contrib/unbound.socket - systemd
  copy:
    remote_src: true
    src: /usr/local/src/unbound-{{unbound_compile_version}}/contrib/unbound.socket
    dest: /etc/systemd/system/unbound.socket
  when: ansible_service_mgr == 'systemd' and not ansible_check_mode

- name: Reload systemd daemon to pick up config changes
  systemd:
    daemon_reload: yes
  when: ansible_service_mgr == 'systemd'
